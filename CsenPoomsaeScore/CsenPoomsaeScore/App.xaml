<Application x:Class="CsenPoomsaeScore.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CsenPoomsaeScore"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="BackgroundColor" Color="#FF232323"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundLightColor" Color="#FF383838"></SolidColorBrush>
        <SolidColorBrush x:Key="TextColor" Color="White"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonBackground" Color="#FF004F68"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonHoverBackground" Color="#FF005A76"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonClickBackground" Color="#FF006C8D"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedBackground" Color="Red"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedHoverBackground" Color="#FFF31313"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedClickBackground" Color="#FFE80000"></SolidColorBrush>
        <SolidColorBrush x:Key="GrayColor" Color="#5A5A5C"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundOnMouseColor" Color="#FF474747"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundSelectColor" Color="#FF5B5B5B"></SolidColorBrush>

        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DarkGray"></SolidColorBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"></SolidColorBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black"></SolidColorBrush>

        <Style TargetType="TextBlock" x:Name="TextBlockStyle" x:Key="TextBlockStyle">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Name="TextBlockTitleStyle" x:Key="TextBlockTitleStyle">
            <Setter Property="FontSize" Value="24"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Name="TextBlockBigTitleStyle" x:Key="TextBlockBigTitleStyle">
            <Setter Property="FontSize" Value="60"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
        </Style>

        <Style TargetType="TextBox" x:Name="TextBoxStyle" x:Key="TextBoxStyle">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="TextAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>

        <Style TargetType="ComboBox" x:Name="ComboBoxStyle" x:Key="ComboBoxStyle">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>

        <Style TargetType="Grid" x:Name="MainWindowStyle" x:Key="MainWindowStyle">
            <Setter Property="Background" Value="{StaticResource BackgroundColor}"></Setter>
        </Style>

        <Style TargetType="GroupBox" x:Name="GroupBoxStyle" x:Key="GroupBoxStyle">
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0.5"></Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="White" Typography.Capitals="AllSmallCaps" FontSize="22"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Name="BigButtonStyle" x:Key="BigButtonStyle">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackground}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonClickBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Name="RemoveButtonStyle" x:Key="RemoveButtonStyle">
            <Setter Property="Background" Value="{StaticResource ButtonRedBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="Content" Value="-"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonRedHoverBackground}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonRedClickBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Name="AddButtonStyle" x:Key="AddButtonStyle">
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="Content" Value="+"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackground}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonClickBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Point adjustment buttons-->
        <Style TargetType="Button" x:Name="BigSubButtonStyle" x:Key="BigSubButtonStyle">
            <Setter Property="Background" Value="{StaticResource ButtonRedBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="35"></Setter>
            <Setter Property="Content" Value="-0.3"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect></DropShadowEffect>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonRedHoverBackground}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonRedClickBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Name="SmallSubButtonStyle" x:Key="SmallSubButtonStyle">
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="35"></Setter>
            <Setter Property="Content" Value="-0.1"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect></DropShadowEffect>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackground}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonClickBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Name="BigSmallAddButtonStyle" x:Key="BigSmallAddButtonStyle">
            <Setter Property="Background" Value="{StaticResource GrayColor}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect></DropShadowEffect>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF6E6E6E"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF767676"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- TextBox with un-empty validation -->
        <Style x:Name="UnEmptyTextBoxStyle" x:Key="UnEmptyTextBoxStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="20" FontWeight="Bold">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="TextAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Text">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <local:NotEmptyStringRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox with only number validation -->
        <Style x:Name="NumericTextBoxStyle" x:Key="NumericTextBoxStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="25" FontWeight="Bold">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonClickBackground}"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Text">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <local:OnlyNumberStringRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- TextBox with only number validation -->
        <Style x:Name="RangeNumberTextBoxStyle" x:Key="RangeNumberTextBoxStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="25" FontWeight="Bold">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonClickBackground}"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Text">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <local:RangeNumberStringRule Min="0" Max="10"/>
                        </Binding.ValidationRules>
                    </Binding>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox with un-empty validation -->
        <Style TargetType="ComboBox" x:Name="UnEmptyComboBoxStyle" x:Key="UnEmptyComboBoxStyle">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="20" FontWeight="Bold">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Text">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <local:NotEmptyStringRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
